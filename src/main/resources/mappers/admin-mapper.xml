<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
	<!-- 총 조회수 -->
	<select id="hitTotal" resultType="String">
		SELECT COUNT(*) from user_log
		WHERE ul_status = 3
	</select>
	<!-- 총 방문자수 -->
	<select id="visitTotal" resultType="String">
		SELECT COUNT(*) FROM user_log	WHERE ul_status = 4
	</select>
	<!-- 신규회원 (1주간) -->
	<select id="clientNew" resultType="String">
		SELECT COUNT(*) FROM member
		WHERE m_regdate >= DATE(NOW() - INTERVAL 7 DAY);
	</select>
	<!-- 신규레시피 (1주간) -->
	<select id="recipeNew" resultType="String">
		SELECT COUNT(*) FROM u_recipe
		WHERE u_rcp_time >= DATE(NOW() - INTERVAL 7 DAY);
	</select>
	
	<!-- 회원수 요약 가져오기 -->
	<select id="memberCountSummary" resultType="mcsvo">
		SELECT * FROM member_count_summary;
	</select>
	<!-- 총 사용자 레시피 수 -->
	<select id="recipeUser" resultType="String">
		SELECT COUNT(*) FROM u_recipe
	</select>
	<!-- 오전 방문자 수 -->
	<select id="visitAm" resultType="String">
		SELECT sum(visitor_count) FROM visit_log
		WHERE visit_period = '오전'
	</select>
	<!-- 오후 방문자 수 -->
	<select id="visitPm" resultType="String">
		SELECT sum(visitor_count) FROM visit_log
		WHERE visit_period = '오후'
	</select>
	<!-- 남자 성별 수 -->
	<select id="maleCount" resultType="String">
		SELECT COUNT(*) FROM member
		WHERE m_gender = 'M'
	</select>
	<!-- 여자 성별 수 -->
	<select id="femaleCount" resultType="String">
		SELECT COUNT(*) FROM member
		WHERE m_gender = 'F'
	</select>
	<!-- 유저레시피 조회수 -->
	<select id="hitUser" resultType="String">
		SELECT COUNT(*) FROM user_log
		WHERE ul_status = 3 AND <![CDATA[ rcp_idx >= 10000 ]]>
	</select>
	<!-- 공공레시피 조회수 -->
	<select id="hitPublic" resultType="String">
		SELECT COUNT(*) FROM user_log
		WHERE ul_status = 3 AND <![CDATA[ rcp_idx < 10000 ]]>
	</select>
	<!-- 1주일 조회수 -->
	<select id="weekHitCount" resultType="String">
		SELECT hit_count FROM week_hit_count
	</select>
	<!-- 1주일 방문수 -->
	<select id="weekVisitCount" resultType="String">
		SELECT visit_count FROM week_visit_count
	</select>
	<!-- 레시피 신고 횟수 -->
	<select id="recipeReport" resultType="arvo">
		SELECT rcp_idx, COUNT(*) AS count
		FROM report_t
		WHERE rcp_idx IS NOT NULL
		GROUP BY rcp_idx
	</select>
	<!-- 댓글 신고 횟수 -->
	<select id="commentReport" resultType="arvo">
		SELECT c_idx, COUNT(*) AS count
		FROM report_t
		WHERE c_idx IS NOT NULL
		GROUP BY c_idx
	</select>
	<!-- 게시글 블라인드 처리 -->
	<update id="rcpBlind" parameterType="arvo">
		UPDATE u_recipe SET u_rcp_status = 3 WHERE rcp_idx = #{rcp_idx}	
	</update>
	<!-- 댓글 블라인드 처리 -->
	<update id="commentBlind" parameterType="arvo">
		UPDATE comment SET c_status = 2 WHERE c_idx = #{c_idx}
	</update>
	<!-- 공지사항 목록 -->
	<select id="ppl_notice" resultType="abvo">
		SELECT * FROM notice WHERE notice_status = 0
	</select>
	<!-- 광고 목록 -->
	<select id="ppl_ppl" resultType="abvo">
		SELECT * FROM ppl WHERE ppl_status = 0
	</select>
	<!-- 재료 목록 -->
	<select id="ppl_fooding" resultType="abvo">
		SELECT * FROM food_ing WHERE food_status = 0
	</select>
	<!-- 공지삭제 -->
	<update id="noticeDel" parameterType="String">
		UPDATE notice SET notice_status=1 WHERE notice_idx=#{notice_idx}
	</update>
	<!-- 광고삭제 -->
	<update id="pplDel" parameterType="String">
		UPDATE ppl SET ppl_status=1 WHERE ppl_idx=#{ppl_idx}
	</update>
	<!-- 재료삭제 -->
	<update id="foodingDel" parameterType="String">
		UPDATE food_ing SET food_status=1 WHERE food_idx=#{food_idx}
	</update>
	<!-- 공지사항 추가 -->
	<insert id="insertNotice" parameterType="abvo">
		INSERT into notice(notice_title, notice_img, notice_status, notice_date)
		VALUES(#{notice_title}, #{notice_img}, 0, sysdate())
	</insert>
	<!-- 광고(ppl) 추가 -->
	<insert id="insertPpl" parameterType="abvo">
		INSERT into ppl(ppl_title, ppl_img, ppl_status, ppl_date)
		VALUES(#{ppl_title}, #{ppl_img}, 0, sysdate())
	</insert>
	<!-- 재료(food_ing) 추가 -->
	<insert id="insertFood_ing" parameterType="abvo">
		INSERT into food_ing(food_title, food_img, food_status, food_date)
		VALUES(#{food_title}, #{food_img}, 0, sysdate())
	</insert>
	<!-- 삭제된 공지사항 목록 -->
	<select id="ppl_deleted_notice" resultType="abvo">
		SELECT * FROM notice WHERE notice_status = 1
	</select>
	<!-- 삭제된 광고 목록 -->
	<select id="ppl_deleted_ppl" resultType="abvo">
		SELECT * FROM ppl WHERE ppl_status = 1
	</select>
	<!-- 삭제된 재료 목록 -->
	<select id="ppl_deleted_fooding" resultType="abvo">
		SELECT * FROM food_ing WHERE food_status = 1
	</select>
	<!-- 공지등록 -->
	<update id="noticeUp" parameterType="String">
		UPDATE notice SET notice_status=0 WHERE notice_idx=#{notice_idx}
	</update>
	<!-- 광고등록 -->
	<update id="pplUp" parameterType="String">
		UPDATE ppl SET ppl_status=0 WHERE ppl_idx=#{ppl_idx}
	</update>
	<!-- 재료등록 -->
	<update id="foodingUp" parameterType="String">
		UPDATE food_ing SET food_status=0 WHERE food_idx=#{food_idx}
	</update>
	
	<!-- 신고테이블 전부 가져오기 -->
	<select id="getReportAll" resultType="arcvo">
	select * from report_t
	</select>
	
	<!-- 게시글 신고내역 관리 모든 신고내역 가져오기 -->
	<select id="getReportlist" resultType="arcvo">
	SELECT
    report_t.rcp_idx,
    member.m_nick,
    report_t.r_type,
    u_recipe.m_nick ,
    u_recipe.u_rcp_title,
    report_t.r_reply,
    CASE WHEN report_t.r_replytime IS NULL THEN 'Yes' ELSE 'No' END AS is_r_replytime_null,
    CASE WHEN u_recipe.u_rcp_blind = 1 THEN 'Yes' ELSE 'No' END AS u_rcp_blind_corresponding_to_rcp_idx
FROM
    report_t
JOIN
    member ON report_t.m_idx = member.m_idx
JOIN
    u_recipe ON report_t.rcp_idx = u_recipe.rcp_idx;
	</select>
	
	<!--  -->
	<select id="recipe_attacknick" parameterType="String" resultType="String">
	select m_nick from member where m_idx = #{m_idx}
	</select>
	
	<select id="getRecipe_info" parameterType="String" resultType="arcvo">
		select u_rcp_title , m_nick from u_recipe where rcp_idx =#{rcp_idx}
	</select>
	
	
	<select id="comment_attacknick" parameterType="String" resultType="String">
	select m_nick from member where m_idx = #{m_idx}
	</select>
	
	<select id="comment_defencenick" parameterType="String" resultType="String">
	select m_nick from comment where c_idx = #{c_idx}
	</select>
	
</mapper>