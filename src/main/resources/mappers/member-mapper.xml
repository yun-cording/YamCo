<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- 회원가입 insert -->
	<insert id="join" parameterType="mvo">
		insert into member
		(m_id
		<if test="m_pw != null">,m_pw</if>
		<if test="m_phone != null">,m_phone</if>
		<if test="m_gender != null">,m_gender </if>
		<if test="m_birthday != null">,m_birthday </if>
		<if test="m_nick != null">,m_nick </if>
		,m_regdate
		,m_status
		<if test="m_fail_count != null">,m_fail_count </if>
		<if test="m_out_date != null">,m_out_date </if>
		<if test="m_login_type != null">,m_login_type </if>
		<if test="m_token != null">,m_token </if>
		<if test="m_t_time != null">,m_t_time </if>
		<if test="m_image != null">,m_image</if>
		)
		values(
		#{m_id}
		<if test="m_pw != null">,#{m_pw}</if>
		<if test="m_phone != null">,#{m_phone}</if>
		<if test="m_gender != null">,#{m_gender}</if>
		<if test="m_birthday != null">,#{m_birthday}</if>
		<if test="m_nick != null"> ,#{m_nick}</if>
		,sysdate(), 1
		<if test="m_fail_count != null"> ,#{m_fail_count}</if>
		<if test="m_out_date != null"> ,#{m_out_date}</if>
		<if test="m_login_type != null">,#{m_login_type}</if>
		<if test="m_token != null"> ,#{m_token}</if>
		<if test="m_t_time != null"> ,#{m_t_time}</if>
		<if test="m_image != null"> ,#{m_image}</if>
		)
	</insert>

	<!-- 아이디 중복 검사 -->
	<select id="idChk" parameterType="String" resultType="int">
		select
		count(*) from member where m_id = #{m_id}
	</select>

	<!-- 회원 검색 -->
	<select id="selectListBySearchVO" parameterType="msvo"
		resultType="mvo">
		select * from member
		<where>
			<if test="m_id != null">
				m_id = #{m_id}
			</if>
			<if test="m_phone != null">
				and m_phone = #{m_phone}
			</if>
			<if test="m_gender != null">
				and m_gender = #{m_gender}
			</if>
			<if test="m_birthday != null">
				and m_birthday = #{m_birthday}
			</if>
			<if test="m_nick != null">
				and m_nick = #{m_nick}
			</if>
			<if test="m_status != null">
				and m_status = #{m_status}
			</if>
			<!-- m_login_type이 2이상이면 소셜가입 계정이 검색됨 -->
			<if test="m_login_type != null">
				and m_login_type <![CDATA[>=]]>
				#{m_login_type}
			</if>
			<if test="like_id != null">
				and m_id Like '%#{like_id}%'
			</if>
			<if test="like_phone != null">
				and m_phone Like '%#{like_phone}%'
			</if>
			<if test="like_birthday != null">
				and m_birthday Like '%#{like_birthday}%'
			</if>
			<if test="like_nick != null">
				and m_nick Like '%#{like_nick}%'
			</if>
			<if test="regdate_start != null">
				and m_regdate <![CDATA[>=]]>
				#{regdate_start}
			</if>
			<if test="regdate_end != null">
				and m_regdate <![CDATA[<]]>
				#{regdate_end}
			</if>
			<if test="out_date_end != null">
				and m_out_date <![CDATA[<]]>
				#{out_date_end}
			</if>
			<if test="member_lock != null">
				and m_fail_count <![CDATA[>=]]>
				5
			</if>
		</where>
	</select>

	<!-- 명예의 전당 가져오기 -->
	<select id="selectAwardList" resultType="mmvo">
		select * from member_metadata where tot_hit_1mon is not null order by tot_hit_1mon desc limit 100
	</select>
	
	<!-- 재훈 메인 명예의 전당 3명가져오기 -->
	<select id="mainAwardList" resultType="mmvo">
		select * from member_metadata where tot_hit_1mon is not null order by tot_hit_1mon desc limit 3
	</select>

	<!-- 닉네임 중복 검사 -->
	<select id="nickChk" parameterType="String" resultType="mvo">
		select
		count(*) from member where m_nick = #{m_nick}
	</select>

	 <!-- 닉네임 설정하기 -->
    <update id="upNick" parameterType="mvo">
        update member set m_nick = #{m_nick} where m_id = #{m_id}
    </update>   
    <!-- 자체 로그인 --> 
   <select id="login" parameterType="mvo" resultType="mvo">
   		select * from member where m_id = #{m_id}
   </select>
   
   <!-- 틀린 횟수 업데이트 -->
   <update id="failCountUp" parameterType="mvo">
   		update member set m_fail_count = #{m_fail_count} where m_id = #{m_id}
   </update>
   
   <!-- 비밀번호 변경 -->
   <update id="changePw" parameterType="mvo">
   		update member set m_pw = #{m_pw} where m_id = #{m_id}
   </update>
    <!-- idx로 mvo가져오기 -->
    <select id="getOne" parameterType="String" resultType="mvo">
    	select * from member where m_idx=#{m_idx}
    </select>
    <!-- 내정보변경 -->
    <update id="changeMyInfo" parameterType="mvo">
    	update member set m_nick=#{m_nick}, m_phone = #{m_phone}, m_image = #{m_image} 
    	where m_idx = #{m_idx}
    </update>
    <!-- 회원탈퇴 -->
    <update id="leave">
    	update member set m_status=3, m_out_date=CURDATE() where m_idx=#{m_idx}
    </update>
    
    <!-- 토큰, 날짜 생성 -->
    <update id="token" parameterType="mvo">
    	update member set m_token = #{m_token}, m_t_time = sysdate() where m_id = #{m_id}
    </update>
    
    <!-- 비밀번호 변경 대상자 검색 -->
    <select id="emailId" parameterType="mvo" resultType="mvo">
    	select * from member where m_token != ''
    </select>
    
    <!-- 변경 완료 후 토큰 삭제 -->
    <update id="tokenDelete" parameterType="mvo">
    	update member set m_token = null, m_t_time = null where m_id = #{m_id}
    </update>
    
    <!-- 찜목록 -->
    <select id="wishList" parameterType="String" resultType="String">
    	select rcp_idx from wish_list where m_idx = #{m_idx}
    </select>
    
</mapper>